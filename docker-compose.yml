services:
  api:
    container_name: api
    working_dir: /workspace
    build:
      dockerfile: ./Dockerfile.dev
      args:
        - API_PORT=${API_PORT}
    restart: always
    ports:
      - ${API_PORT}:3000 # app port
      - 3001:3001 # debug port
    volumes:
      - .:/workspace # source code
      - ~/.m2:/root/.m2 # maven local cache
    # entrypoint: [ "mvn", "clean", "quarkus:dev" ]
    # entrypoint: [ "./gradlew", "quarkusDev" ]
    env_file: .env
    environment:
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: database
      DATABASE_PORT: ${DATABASE_PORT}
      API_PORT: ${API_PORT}
    networks:
      - internal
    depends_on:
      db:
        condition: service_healthy
  db:
    container_name: database
    image: postgres:latest
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - db_volume:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - internal
volumes:
  db_volume:
    name: db_volume
networks:
  internal:
    name: internal
